---
import { HeaderLinks } from '../config';

export interface Props {
    title?: string;
}

const urlPath = Astro.url.pathname;

const { title = "zeephyr red - different services for different communities" } = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{ title }</title>
	</head>
	<body>
		<main class="rounded-2xl w-full h-full flex flex-col px-4">
            <!-- Header -->
            <header class="z-50 fixed top-0 inset-x-0 px-4">
                <div class="w-full p-4 bg-gradient-to-tr from-red-400 via-pink-400 to-purple-400 rounded-b-[2rem] rounded-t-md">
                    <div class="w-full bg-gray-100 rounded-full flex items-center justify-between px-6 py-2">
                        <!-- Logotype -->
                        <p class="text-base font-bold text-black">zeephyr</p>

                        <div class="hidden md:flex items-stretch">
                            <!-- Links -->
                            { HeaderLinks.map((entry) => {
                                if (entry.isInDevelopment) {
                                    return (
                                        <div class={ `flex cursor-not-allowed items-center gap-2 relative rounded-full mx-2 px-4 py-1 border-2 border-black ${ urlPath.startsWith(entry.link) ? "bg-black text-white" : "" }` }>
                                            <p>{ entry.title }</p>

                                            <span class="rounded-full text-xs bg-red-500 px-2 text-white">
                                                Soon
                                            </span>
                                        </div>
                                    )
                                } else {
                                    return <a href={ entry.link } class={ `rounded-full mx-2 px-4 py-1 border-2 border-black ${ urlPath.startsWith(entry.link) ? "bg-black text-white" : "" }` }>{ entry.title }</a>
                                }
                            }) }
                        </div>
                    </div>
                </div>
            </header>

            <!--  -->
            <slot />
		</main>
	</body>
</html>
